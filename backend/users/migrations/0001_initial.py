# Generated by Django 5.2.7 on 2025-10-18 09:35

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        help_text="First name or given name.",
                        max_length=100,
                        null=True,
                        verbose_name="First Name",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        help_text="Last name or surname.",
                        max_length=100,
                        null=True,
                        verbose_name="Last Name",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("botanist", "Approved Botanist"),
                            ("finance", "Finance Officer"),
                            ("none", "None"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("it_asset_id", models.PositiveIntegerField(blank=True, null=True)),
                ("employee_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
        ),
        migrations.CreateModel(
            name="RefreshToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("is_blacklisted", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refresh_tokens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserPreferences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "theme",
                    models.CharField(
                        choices=[
                            ("light", "Light Mode"),
                            ("dark", "Dark Mode"),
                            ("system", "System"),
                        ],
                        default="system",
                        help_text="User's preferred theme",
                        max_length=10,
                    ),
                ),
                (
                    "submissions_display_mode",
                    models.CharField(
                        choices=[("grid", "Grid View"), ("list", "List View")],
                        default="list",
                        help_text="How to display submissions",
                        max_length=10,
                    ),
                ),
                (
                    "certificates_display_mode",
                    models.CharField(
                        choices=[("grid", "Grid View"), ("list", "List View")],
                        default="list",
                        help_text="How to display certificates",
                        max_length=10,
                    ),
                ),
                (
                    "items_per_page",
                    models.IntegerField(
                        choices=[
                            (10, "10 items"),
                            (25, "25 items"),
                            (50, "50 items"),
                            (100, "100 items"),
                        ],
                        default=25,
                        help_text="Number of items to show per page",
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, help_text="Receive email notifications"
                    ),
                ),
                (
                    "comment_notifications",
                    models.BooleanField(
                        default=True,
                        help_text="Notify when a submission you are involved in receives a comment",
                    ),
                ),
                (
                    "reaction_notifications",
                    models.BooleanField(
                        default=True,
                        help_text="Notify when a comment you made is reacted to",
                    ),
                ),
                (
                    "notify_submission_assigned",
                    models.BooleanField(
                        default=True,
                        help_text="Notify when a submission is assigned to you",
                    ),
                ),
                (
                    "notify_phase_changes",
                    models.BooleanField(
                        default=True, help_text="Notify when submission phase changes"
                    ),
                ),
                (
                    "notify_certificate_generated",
                    models.BooleanField(
                        default=True, help_text="Notify when certificates are generated"
                    ),
                ),
                (
                    "notify_invoices_generated",
                    models.BooleanField(
                        default=True, help_text="Notify when invoices are generated"
                    ),
                ),
                (
                    "notify_pdfs_mailed",
                    models.BooleanField(
                        default=True, help_text="Notify when pdfs sent to client"
                    ),
                ),
                (
                    "reduce_motion",
                    models.BooleanField(
                        default=False, help_text="Reduce animations and motion"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "loader_style",
                    models.CharField(
                        choices=[
                            ("cook", "Cook Loader"),
                            ("base", "Base Loader"),
                            ("minimal", "Minimal Loader"),
                        ],
                        default="minimal",
                        help_text="Preferred loading animation style",
                        max_length=10,
                    ),
                ),
                (
                    "default_search_settings",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Default search and filter settings for various pages",
                    ),
                ),
                (
                    "table_filter_preferences",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Persistent filter and sort preferences for data tables (officers, stations, users)",
                    ),
                ),
                (
                    "ui_preferences",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional UI preferences and settings",
                    ),
                ),
                (
                    "date_format",
                    models.CharField(
                        choices=[
                            ("d/m/Y", "DD/MM/YYYY"),
                            ("m/d/Y", "MM/DD/YYYY"),
                            ("Y-m-d", "YYYY-MM-DD"),
                            ("d F Y", "DD Month YYYY"),
                        ],
                        default="d/m/Y",
                        help_text="Preferred date format",
                        max_length=10,
                    ),
                ),
                (
                    "time_format",
                    models.CharField(
                        choices=[
                            ("g:i A", "12-hour (2:30 PM)"),
                            ("H:i", "24-hour (14:30)"),
                        ],
                        default="g:i A",
                        help_text="Preferred time format",
                        max_length=10,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="The user these preferences belong to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Preferences",
                "verbose_name_plural": "User Preferences",
            },
        ),
    ]
