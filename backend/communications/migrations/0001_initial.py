# Generated by Django 5.2.6 on 2025-09-13 11:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("submissions", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SubmissionComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("text", models.CharField(max_length=1500)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "submission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="submissions.submission",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Submission Comment",
                "verbose_name_plural": "Submission Comments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("submission_assigned", "Submission Assigned"),
                            ("submission_phase_changed", "Phase Changed"),
                            ("botanist_approval_needed", "Botanist Approval Needed"),
                            ("finance_approval_needed", "Finance Approval Needed"),
                            ("certificate_generated", "Certificate Generated"),
                            ("invoice_generated", "Invoice Generated"),
                            ("pdf_generation_failed", "PDF Generation Failed"),
                            ("system_maintenance", "System Maintenance"),
                            ("settings_updated", "Settings Updated"),
                            ("mention", "You were mentioned"),
                            ("comment_added", "New Comment"),
                        ],
                        help_text="Type of notification",
                        max_length=30,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Notification title/headline", max_length=255
                    ),
                ),
                ("message", models.TextField(help_text="Notification message body")),
                (
                    "action_url",
                    models.URLField(
                        blank=True,
                        help_text="URL to redirect to when notification is clicked",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "is_read",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the notification has been read",
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the notification was read",
                        null=True,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        help_text="Notification priority level",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this notification expires (optional)",
                        null=True,
                    ),
                ),
                (
                    "actor",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who triggered this notification",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notifications_sent",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        help_text="User who will receive this notification",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["recipient", "is_read"],
                        name="communicati_recipie_dd2f99_idx",
                    ),
                    models.Index(
                        fields=["recipient", "created_at"],
                        name="communicati_recipie_5da4f5_idx",
                    ),
                    models.Index(
                        fields=["notification_type"],
                        name="communicati_notific_8e3688_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CommentReaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reaction",
                    models.CharField(
                        choices=[
                            ("thumbup", "üëç Thumbs Up"),
                            ("heart", "‚ù§Ô∏è Heart"),
                            ("sad", "üò¢ Sad"),
                            ("angry", "üò° Angry"),
                            ("laugh", "üòÇ Laugh"),
                        ],
                        help_text="Type of reaction",
                        max_length=30,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who made the reaction",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comment_reactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "comment",
                    models.ForeignKey(
                        help_text="Comment being reacted to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reactions",
                        to="communications.submissioncomment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment Reaction",
                "verbose_name_plural": "Comment Reactions",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["comment", "reaction"],
                        name="communicati_comment_600fb4_idx",
                    ),
                    models.Index(
                        fields=["user", "comment"],
                        name="communicati_user_id_cc409a_idx",
                    ),
                ],
                "unique_together": {("user", "comment")},
            },
        ),
    ]
